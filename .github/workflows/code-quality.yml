name: Code Quality Audit

on: [push, pull_request]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones for code coverage

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/prod.txt
        pip install pylint black pytest pytest-cov

    - name: Run Pylint
      run: |
        pylint src/ --disable=invalid-name,R0801,C0114,C0115,C0116 --max-line-length=120 -r n
      continue-on-error: false

    - name: Check formatting with Black
      run: |
        black --check --diff src/ tests/ scripts/

    - name: Run Tests with Coverage
      run: |
        pytest tests/ --cov=src/zauriscore --cov-report=term-missing --cov-fail-under=80

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.xml
        fail_ci_if_error: true

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    # Only run SonarCloud when this repo is the intended one.
    # To enable SonarCloud scanning, add the `SONAR_TOKEN` secret in this repository's Settings -> Secrets.
    if: false  # Disabled - enable by setting to 'github.repository == your-org/zauriscore'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for SonarCloud

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}